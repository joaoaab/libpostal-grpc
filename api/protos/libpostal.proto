syntax = "proto3";

package libpostal.api;
option go_package = "github.com/joaoaab/libpostal-grpc/protos";

service Address{
    rpc ParseAddress(ParseAddressRequest) returns (ParsedAddressResponse) {}
    rpc ExpandAddress(ExpandAddressRequest) returns (ExpandedAddressResponse) {}
}

message ParseAddressRequest{
    string address = 1;
    string language = 2;
    string country = 3;
}

message ParsedAddressResponse{
    string world_region = 1; // currently only used for appending “West Indies” after the country name, a pattern frequently used in the English-speaking Caribbean e.g. “Jamaica, West Indies”
    string country = 2; // ISO 3166
    string country_region = 3; // informal subdivision of a country without any political status
    string state = 4; // a first-level administrative division. Scotland, Northern Ireland, Wales, and England in the UK are mapped to "state" as well (convention used in OSM, GeoPlanet, etc.)
    string state_district = 5; // usually a second-level administrative division or county.
    string island = 6; // named islands e.g. "Maui"
    string city = 7; // any human settlement including cities, towns, villages, hamlets, localities, etc.
    string city_district = 8; //  these are usually boroughs or districts within a city that serve some official purpose e.g. "Brooklyn" or "Hackney" or "Bratislava IV"
    string suburb = 9; // usually an unofficial neighborhood name like "Harlem", "South Bronx", or "Crown Heights"
    string postcode = 10; // postal codes used for mail sorting
    string po_box = 11; // post office box: typically found in non-physical (mail-only) addresses
    string entrance = 12; // numbered/lettered entrance
    string staircase = 13; // numbered/lettered staircase
    string level = 14; // expressions indicating a floor number e.g. "3rd Floor", "Ground Floor", etc.
    string unit = 15; // an apartment, unit, office, lot, or other secondary unit designator
    string road = 16; //  street name(s)
    string house_number = 17; 
    string near = 18; // phrases like "in", "near", etc. used after a category phrase to help with parsing queries like "restaurants in Brooklyn"
    string category = 19; // for category queries like "restaurants", etc.
    string house = 20; // venue name e.g. "Brooklyn Academy of Music", and building names e.g. "Empire State Building"
}

message ExpandAddressRequest{
    string address = 1;
    ExpandOptions options = 2;
}

message ExpandedAddressResponse{
    repeated string expanded_address = 1;
}

// the address_components flag is a bit set argument
// you should set it using the following definitions:
//#define LIBPOSTAL_ADDRESS_NONE 0
//define LIBPOSTAL_ADDRESS_ANY (1 << 0)
//define LIBPOSTAL_ADDRESS_NAME (1 << 1)
//define LIBPOSTAL_ADDRESS_HOUSE_NUMBER (1 << 2)
//define LIBPOSTAL_ADDRESS_STREET (1 << 3)
//define LIBPOSTAL_ADDRESS_UNIT (1 << 4)
//define LIBPOSTAL_ADDRESS_LEVEL (1 << 5)
//define LIBPOSTAL_ADDRESS_STAIRCASE (1 << 6)
//define LIBPOSTAL_ADDRESS_ENTRANCE (1 << 7)
//define LIBPOSTAL_ADDRESS_CATEGORY (1 << 8)
//define LIBPOSTAL_ADDRESS_NEAR (1 << 9)
//define LIBPOSTAL_ADDRESS_TOPONYM (1 << 13)
//define LIBPOSTAL_ADDRESS_POSTAL_CODE (1 << 14)
//define LIBPOSTAL_ADDRESS_PO_BOX (1 << 15)
//define LIBPOSTAL_ADDRESS_ALL ((1 << 16) - 1)

// if this message is not set, the api will use the default options
// these options can be checked in the following link
// https://github.com/openvenues/libpostal/blob/9c975972985b54491e756efd70e416f18ff97958/src/libpostal.c#L22
message ExpandOptions{
    repeated string languages = 1;
    int32 address_components = 2;
    bool latin_ascii = 3;
    bool transliterate = 4;
    bool strip_accents = 5;
    bool decompose = 6;
    bool lower_case = 7;
    bool trim_string = 8;
    bool replace_word_hyphens = 9;
    bool delete_word_hyphens = 10;
    bool replace_numeric_hyphens = 11;
    bool delete_numeric_hyphens = 12;
    bool split_alpha_from_numeric = 13;
    bool delete_final_periods = 14;
    bool delete_acronym_periods = 15;
    bool drop_english_possessives = 16;
    bool delete_apostrophes = 17;
    bool expand_numex = 18;
    bool roman_numerals = 19;
}